services:
  # n8n service
  n8n:
    image: n8nio/n8n:1.91.1 # use dockerhub image for local Dockerfile built
    environment:  
      # Base environment variables
      WEBHOOK_URL: "https://auto.pfklabs.online/"
      N8N_EDITOR_BASE_URL: "https://auto.pfklabs.online/"
      N8N_HOST: "auto.pfklabs.online"
      N8N_PORT: 5678
      NODE_ENV: "production"
      N8N_PROTOCOL: "https"
      N8N_TRUST_PROXY: "true"
      N8N_RUNNERS_ENABLED: "true"
      N8N_REINSTALL_MISSING_PACKAGES: "true"
      N8N_COMMUNITY_PACKAGES_ENABLED: "true"            
      N8N_NODE_PATH: "/home/node/.n8n/nodes"
      N8N_BASIC_AUTH_ACTIVE: "true"                # Enable Basic Auth
      N8N_BASIC_AUTH_USER: "ainbidev"              # Basic Auth Username
      N8N_BASIC_AUTH_PASSWORD: "4!nb1deV"          # Basic Auth Password
      DB_TYPE: "postgresdb"                        # Use PostgreSQL
      DB_POSTGRESDB_HOST: "postgresql"             # PostgreSQL service name
      DB_POSTGRESDB_PORT: 5432                     # PostgreSQL default port
      # Database n8n
      # must be created with pgadmin before installing this stack
      DB_POSTGRESDB_DATABASE: "n8n"                # PostgreSQL database name
      DB_POSTGRESDB_USER: "ainbidev"               # PostgreSQL username
      DB_POSTGRESDB_PASSWORD: "4!nb1deV"    # PostgreSQL password
      NODE_FUNCTION_ALLOW_EXTERNAL : "*"
      NODE_FUNCTION_ALLOW_BUILTIN : "*"
      # Queue mode and Redis
      OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: "true"
      N8N_ENCRYPTION_KEY: "r3djGX2vPoeL9zKL" # must be the same as the worker
      EXECUTIONS_MODE: "queue"
      QUEUE_BULL_REDIS_HOST: "redis"
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_DB: 2
      # Delete executions data
      EXECUTIONS_DATA_PRUNE: "true"
      EXECUTIONS_DATA_MAX_AGE: 168 # 2 semanas
      # Timezone
      GENERIC_TIMEZONE: "America/Sao_Paulo"
      TZ: America/Sao_Paulo
    # Configura o Modo de Deploy      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.5'
          memory: 1024M
      labels: # auto instead of n8n, only traefik can access its port 5678
        - "traefik.enable=true"        
        - "traefik.http.routers.auto.rule=Host(`auto.pfklabs.online`)"
        - "traefik.http.routers.auto.entrypoints=websecure"    
        - "traefik.http.routers.auto.priority=1"  
        - "traefik.http.routers.auto.tls.certresolver=letsencryptresolver"
        - "traefik.http.routers.auto.service=auto"
        - "traefik.http.services.auto.loadbalancer.server.port=5678"
        - "traefik.http.services.auto.loadbalancer.passHostHeader=1"

  n8n_worker:
    image: n8nio/n8n:1.91.1 # use dockerhub image for local Dockerfile built
    command: worker --concurrency=10
    environment:  
      # Base environment variables
      WEBHOOK_URL: "https://auto.pfklabs.online/"
      N8N_EDITOR_BASE_URL: "https://auto.pfklabs.online/"
      N8N_HOST: "auto.pfklabs.online"
      N8N_PORT: 5678
      NODE_ENV: "production"
      N8N_PROTOCOL: "https"
      N8N_TRUST_PROXY: "true"
      N8N_RUNNERS_ENABLED: "true"
      N8N_REINSTALL_MISSING_PACKAGES: "true"
      N8N_COMMUNITY_PACKAGES_ENABLED: "true"
      N8N_NODE_PATH: "/home/node/.n8n/nodes"
      N8N_BASIC_AUTH_ACTIVE: "true"                # Enable Basic Auth
      N8N_BASIC_AUTH_USER: "ainbidev"              # Basic Auth Username
      N8N_BASIC_AUTH_PASSWORD: "4!nb1deV"          # Basic Auth Password
      DB_TYPE: "postgresdb"                        # Use PostgreSQL
      DB_POSTGRESDB_HOST: "postgresql"             # PostgreSQL service name
      DB_POSTGRESDB_PORT: 5432                     # PostgreSQL default port
      # Database n8n
      # must be created with pgadmin before installing this stack
      DB_POSTGRESDB_DATABASE: "n8n"                # PostgreSQL database name
      DB_POSTGRESDB_USER: "ainbidev"               # PostgreSQL username
      DB_POSTGRESDB_PASSWORD: "4!nb1deV"    # PostgreSQL password
      NODE_FUNCTION_ALLOW_EXTERNAL : "*"
      NODE_FUNCTION_ALLOW_BUILTIN : "*"
      # Queue mode and Redis
      OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: "true"
      N8N_ENCRYPTION_KEY: "r3djGX2vPoeL9zKL" # must be the same as the editor
      EXECUTIONS_MODE: "queue"
      QUEUE_BULL_REDIS_HOST: "redis"
      QUEUE_BULL_REDIS_PORT: 6379
      QUEUE_BULL_REDIS_DB: 2
      # Delete executions data
      EXECUTIONS_DATA_PRUNE: "true"
      EXECUTIONS_DATA_MAX_AGE: 168 # 2 semanas
      # Timezone
      GENERIC_TIMEZONE: "America/Sao_Paulo"
      TZ: America/Sao_Paulo
    # Configura o Modo de Deploy      
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - network_public
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '1.0'
          memory: 4096M


networks:
  network_public:
    external: true
    name: network_public

# Define Docker volumes
volumes:
  n8n_data:
